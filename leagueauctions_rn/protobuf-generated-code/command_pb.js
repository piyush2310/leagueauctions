// source: command.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var google_protobuf_timestamp_pb = require('google-protobuf/google/protobuf/timestamp_pb.js');
goog.object.extend(proto, google_protobuf_timestamp_pb);
goog.exportSymbol('proto.auctioncmd.AuctionRequest', null, global);
goog.exportSymbol('proto.auctioncmd.AuctionRequest.RequestCase', null, global);
goog.exportSymbol('proto.auctioncmd.AuctionRequest.RequestType', null, global);
goog.exportSymbol('proto.auctioncmd.AuctionResponse', null, global);
goog.exportSymbol('proto.auctioncmd.AuctionResponse.ResponseCase', null, global);
goog.exportSymbol('proto.auctioncmd.AuctionResponse.ResponseType', null, global);
goog.exportSymbol('proto.auctioncmd.AutionParticipant', null, global);
goog.exportSymbol('proto.auctioncmd.CreateAuctionBoardRequest', null, global);
goog.exportSymbol('proto.auctioncmd.CreateAuctionBoardResponse', null, global);
goog.exportSymbol('proto.auctioncmd.DeleteAuctionBoardRequest', null, global);
goog.exportSymbol('proto.auctioncmd.DeleteAuctionBoardResponse', null, global);
goog.exportSymbol('proto.auctioncmd.FetchAuctionBoardRequest', null, global);
goog.exportSymbol('proto.auctioncmd.FetchAuctionBoardResponse', null, global);
goog.exportSymbol('proto.auctioncmd.FetchPlayerInfoByPlayerUUIDRequest', null, global);
goog.exportSymbol('proto.auctioncmd.FetchPlayerInfoByUserUUIDRequest', null, global);
goog.exportSymbol('proto.auctioncmd.FetchPlayerInfoResponse', null, global);
goog.exportSymbol('proto.auctioncmd.ParticipantRole', null, global);
goog.exportSymbol('proto.auctioncmd.PlayerCategory', null, global);
goog.exportSymbol('proto.auctioncmd.PlayerType', null, global);
goog.exportSymbol('proto.auctioncmd.UpdateAuctionBoardRequest', null, global);
goog.exportSymbol('proto.auctioncmd.UpdateAuctionBoardResponse', null, global);
goog.exportSymbol('proto.auctioncmd.UpdatePlayerInfoRequest', null, global);
goog.exportSymbol('proto.auctioncmd.UpdatePlayerInfoResponse', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.auctioncmd.AuctionRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.auctioncmd.AuctionRequest.oneofGroups_);
};
goog.inherits(proto.auctioncmd.AuctionRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.auctioncmd.AuctionRequest.displayName = 'proto.auctioncmd.AuctionRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.auctioncmd.AuctionResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.auctioncmd.AuctionResponse.oneofGroups_);
};
goog.inherits(proto.auctioncmd.AuctionResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.auctioncmd.AuctionResponse.displayName = 'proto.auctioncmd.AuctionResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.auctioncmd.FetchPlayerInfoByUserUUIDRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.auctioncmd.FetchPlayerInfoByUserUUIDRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.auctioncmd.FetchPlayerInfoByUserUUIDRequest.displayName = 'proto.auctioncmd.FetchPlayerInfoByUserUUIDRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.auctioncmd.FetchPlayerInfoByPlayerUUIDRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.auctioncmd.FetchPlayerInfoByPlayerUUIDRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.auctioncmd.FetchPlayerInfoByPlayerUUIDRequest.displayName = 'proto.auctioncmd.FetchPlayerInfoByPlayerUUIDRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.auctioncmd.FetchPlayerInfoResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.auctioncmd.FetchPlayerInfoResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.auctioncmd.FetchPlayerInfoResponse.displayName = 'proto.auctioncmd.FetchPlayerInfoResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.auctioncmd.UpdatePlayerInfoRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.auctioncmd.UpdatePlayerInfoRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.auctioncmd.UpdatePlayerInfoRequest.displayName = 'proto.auctioncmd.UpdatePlayerInfoRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.auctioncmd.UpdatePlayerInfoResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.auctioncmd.UpdatePlayerInfoResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.auctioncmd.UpdatePlayerInfoResponse.displayName = 'proto.auctioncmd.UpdatePlayerInfoResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.auctioncmd.PlayerCategory = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.auctioncmd.PlayerCategory, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.auctioncmd.PlayerCategory.displayName = 'proto.auctioncmd.PlayerCategory';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.auctioncmd.AutionParticipant = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.auctioncmd.AutionParticipant, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.auctioncmd.AutionParticipant.displayName = 'proto.auctioncmd.AutionParticipant';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.auctioncmd.CreateAuctionBoardRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.auctioncmd.CreateAuctionBoardRequest.repeatedFields_, null);
};
goog.inherits(proto.auctioncmd.CreateAuctionBoardRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.auctioncmd.CreateAuctionBoardRequest.displayName = 'proto.auctioncmd.CreateAuctionBoardRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.auctioncmd.CreateAuctionBoardResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.auctioncmd.CreateAuctionBoardResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.auctioncmd.CreateAuctionBoardResponse.displayName = 'proto.auctioncmd.CreateAuctionBoardResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.auctioncmd.FetchAuctionBoardRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.auctioncmd.FetchAuctionBoardRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.auctioncmd.FetchAuctionBoardRequest.displayName = 'proto.auctioncmd.FetchAuctionBoardRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.auctioncmd.FetchAuctionBoardResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.auctioncmd.FetchAuctionBoardResponse.repeatedFields_, null);
};
goog.inherits(proto.auctioncmd.FetchAuctionBoardResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.auctioncmd.FetchAuctionBoardResponse.displayName = 'proto.auctioncmd.FetchAuctionBoardResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.auctioncmd.DeleteAuctionBoardRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.auctioncmd.DeleteAuctionBoardRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.auctioncmd.DeleteAuctionBoardRequest.displayName = 'proto.auctioncmd.DeleteAuctionBoardRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.auctioncmd.DeleteAuctionBoardResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.auctioncmd.DeleteAuctionBoardResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.auctioncmd.DeleteAuctionBoardResponse.displayName = 'proto.auctioncmd.DeleteAuctionBoardResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.auctioncmd.UpdateAuctionBoardRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.auctioncmd.UpdateAuctionBoardRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.auctioncmd.UpdateAuctionBoardRequest.displayName = 'proto.auctioncmd.UpdateAuctionBoardRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.auctioncmd.UpdateAuctionBoardResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.auctioncmd.UpdateAuctionBoardResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.auctioncmd.UpdateAuctionBoardResponse.displayName = 'proto.auctioncmd.UpdateAuctionBoardResponse';
}

/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.auctioncmd.AuctionRequest.oneofGroups_ = [[2,3,4,5,6,7,8]];

/**
 * @enum {number}
 */
proto.auctioncmd.AuctionRequest.RequestCase = {
  REQUEST_NOT_SET: 0,
  FETCH_PLAYER_INFO_BY_USER_UUID_REQUEST: 2,
  FETCH_PLAYER_INFO_BY_PLAYER_UUID_REQUEST: 3,
  UPDATE_PLAYER_INFO_REQUEST: 4,
  CREATE_AUCTION_BOARD_REQUEST: 5,
  UPDATE_AUCTION_BOARD_REQUEST: 6,
  DELETE_AUCTION_BOARD_REQUEST: 7,
  FETCH_AUCTION_BOARD_REQUEST: 8
};

/**
 * @return {proto.auctioncmd.AuctionRequest.RequestCase}
 */
proto.auctioncmd.AuctionRequest.prototype.getRequestCase = function() {
  return /** @type {proto.auctioncmd.AuctionRequest.RequestCase} */(jspb.Message.computeOneofCase(this, proto.auctioncmd.AuctionRequest.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.auctioncmd.AuctionRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.auctioncmd.AuctionRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.auctioncmd.AuctionRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.auctioncmd.AuctionRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    requestType: jspb.Message.getFieldWithDefault(msg, 1, 0),
    fetchPlayerInfoByUserUuidRequest: (f = msg.getFetchPlayerInfoByUserUuidRequest()) && proto.auctioncmd.FetchPlayerInfoByUserUUIDRequest.toObject(includeInstance, f),
    fetchPlayerInfoByPlayerUuidRequest: (f = msg.getFetchPlayerInfoByPlayerUuidRequest()) && proto.auctioncmd.FetchPlayerInfoByPlayerUUIDRequest.toObject(includeInstance, f),
    updatePlayerInfoRequest: (f = msg.getUpdatePlayerInfoRequest()) && proto.auctioncmd.UpdatePlayerInfoRequest.toObject(includeInstance, f),
    createAuctionBoardRequest: (f = msg.getCreateAuctionBoardRequest()) && proto.auctioncmd.CreateAuctionBoardRequest.toObject(includeInstance, f),
    updateAuctionBoardRequest: (f = msg.getUpdateAuctionBoardRequest()) && proto.auctioncmd.UpdateAuctionBoardRequest.toObject(includeInstance, f),
    deleteAuctionBoardRequest: (f = msg.getDeleteAuctionBoardRequest()) && proto.auctioncmd.DeleteAuctionBoardRequest.toObject(includeInstance, f),
    fetchAuctionBoardRequest: (f = msg.getFetchAuctionBoardRequest()) && proto.auctioncmd.FetchAuctionBoardRequest.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.auctioncmd.AuctionRequest}
 */
proto.auctioncmd.AuctionRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.auctioncmd.AuctionRequest;
  return proto.auctioncmd.AuctionRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.auctioncmd.AuctionRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.auctioncmd.AuctionRequest}
 */
proto.auctioncmd.AuctionRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.auctioncmd.AuctionRequest.RequestType} */ (reader.readEnum());
      msg.setRequestType(value);
      break;
    case 2:
      var value = new proto.auctioncmd.FetchPlayerInfoByUserUUIDRequest;
      reader.readMessage(value,proto.auctioncmd.FetchPlayerInfoByUserUUIDRequest.deserializeBinaryFromReader);
      msg.setFetchPlayerInfoByUserUuidRequest(value);
      break;
    case 3:
      var value = new proto.auctioncmd.FetchPlayerInfoByPlayerUUIDRequest;
      reader.readMessage(value,proto.auctioncmd.FetchPlayerInfoByPlayerUUIDRequest.deserializeBinaryFromReader);
      msg.setFetchPlayerInfoByPlayerUuidRequest(value);
      break;
    case 4:
      var value = new proto.auctioncmd.UpdatePlayerInfoRequest;
      reader.readMessage(value,proto.auctioncmd.UpdatePlayerInfoRequest.deserializeBinaryFromReader);
      msg.setUpdatePlayerInfoRequest(value);
      break;
    case 5:
      var value = new proto.auctioncmd.CreateAuctionBoardRequest;
      reader.readMessage(value,proto.auctioncmd.CreateAuctionBoardRequest.deserializeBinaryFromReader);
      msg.setCreateAuctionBoardRequest(value);
      break;
    case 6:
      var value = new proto.auctioncmd.UpdateAuctionBoardRequest;
      reader.readMessage(value,proto.auctioncmd.UpdateAuctionBoardRequest.deserializeBinaryFromReader);
      msg.setUpdateAuctionBoardRequest(value);
      break;
    case 7:
      var value = new proto.auctioncmd.DeleteAuctionBoardRequest;
      reader.readMessage(value,proto.auctioncmd.DeleteAuctionBoardRequest.deserializeBinaryFromReader);
      msg.setDeleteAuctionBoardRequest(value);
      break;
    case 8:
      var value = new proto.auctioncmd.FetchAuctionBoardRequest;
      reader.readMessage(value,proto.auctioncmd.FetchAuctionBoardRequest.deserializeBinaryFromReader);
      msg.setFetchAuctionBoardRequest(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.auctioncmd.AuctionRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.auctioncmd.AuctionRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.auctioncmd.AuctionRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.auctioncmd.AuctionRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRequestType();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getFetchPlayerInfoByUserUuidRequest();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.auctioncmd.FetchPlayerInfoByUserUUIDRequest.serializeBinaryToWriter
    );
  }
  f = message.getFetchPlayerInfoByPlayerUuidRequest();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.auctioncmd.FetchPlayerInfoByPlayerUUIDRequest.serializeBinaryToWriter
    );
  }
  f = message.getUpdatePlayerInfoRequest();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.auctioncmd.UpdatePlayerInfoRequest.serializeBinaryToWriter
    );
  }
  f = message.getCreateAuctionBoardRequest();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.auctioncmd.CreateAuctionBoardRequest.serializeBinaryToWriter
    );
  }
  f = message.getUpdateAuctionBoardRequest();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      proto.auctioncmd.UpdateAuctionBoardRequest.serializeBinaryToWriter
    );
  }
  f = message.getDeleteAuctionBoardRequest();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      proto.auctioncmd.DeleteAuctionBoardRequest.serializeBinaryToWriter
    );
  }
  f = message.getFetchAuctionBoardRequest();
  if (f != null) {
    writer.writeMessage(
      8,
      f,
      proto.auctioncmd.FetchAuctionBoardRequest.serializeBinaryToWriter
    );
  }
};


/**
 * @enum {number}
 */
proto.auctioncmd.AuctionRequest.RequestType = {
  NONE: 0,
  FETCH_PLAYER_INFO_BY_USER_UUID: 1,
  FETCH_PLAYER_INFO_BY_PLAYER_UUID: 2,
  UPDATE_PLAYER_INFO: 3,
  CREATE_AUCTION_BOARD: 4,
  UPDATE_AUCTION_BOARD: 5,
  DELETE_AUCTION_BOARD: 6,
  FETCH_AUCTION_BOARD_INFO: 7
};

/**
 * optional RequestType request_type = 1;
 * @return {!proto.auctioncmd.AuctionRequest.RequestType}
 */
proto.auctioncmd.AuctionRequest.prototype.getRequestType = function() {
  return /** @type {!proto.auctioncmd.AuctionRequest.RequestType} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.auctioncmd.AuctionRequest.RequestType} value
 * @return {!proto.auctioncmd.AuctionRequest} returns this
 */
proto.auctioncmd.AuctionRequest.prototype.setRequestType = function(value) {
  return jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * optional FetchPlayerInfoByUserUUIDRequest fetch_player_info_by_user_uuid_request = 2;
 * @return {?proto.auctioncmd.FetchPlayerInfoByUserUUIDRequest}
 */
proto.auctioncmd.AuctionRequest.prototype.getFetchPlayerInfoByUserUuidRequest = function() {
  return /** @type{?proto.auctioncmd.FetchPlayerInfoByUserUUIDRequest} */ (
    jspb.Message.getWrapperField(this, proto.auctioncmd.FetchPlayerInfoByUserUUIDRequest, 2));
};


/**
 * @param {?proto.auctioncmd.FetchPlayerInfoByUserUUIDRequest|undefined} value
 * @return {!proto.auctioncmd.AuctionRequest} returns this
*/
proto.auctioncmd.AuctionRequest.prototype.setFetchPlayerInfoByUserUuidRequest = function(value) {
  return jspb.Message.setOneofWrapperField(this, 2, proto.auctioncmd.AuctionRequest.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.auctioncmd.AuctionRequest} returns this
 */
proto.auctioncmd.AuctionRequest.prototype.clearFetchPlayerInfoByUserUuidRequest = function() {
  return this.setFetchPlayerInfoByUserUuidRequest(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.auctioncmd.AuctionRequest.prototype.hasFetchPlayerInfoByUserUuidRequest = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional FetchPlayerInfoByPlayerUUIDRequest fetch_player_info_by_player_uuid_request = 3;
 * @return {?proto.auctioncmd.FetchPlayerInfoByPlayerUUIDRequest}
 */
proto.auctioncmd.AuctionRequest.prototype.getFetchPlayerInfoByPlayerUuidRequest = function() {
  return /** @type{?proto.auctioncmd.FetchPlayerInfoByPlayerUUIDRequest} */ (
    jspb.Message.getWrapperField(this, proto.auctioncmd.FetchPlayerInfoByPlayerUUIDRequest, 3));
};


/**
 * @param {?proto.auctioncmd.FetchPlayerInfoByPlayerUUIDRequest|undefined} value
 * @return {!proto.auctioncmd.AuctionRequest} returns this
*/
proto.auctioncmd.AuctionRequest.prototype.setFetchPlayerInfoByPlayerUuidRequest = function(value) {
  return jspb.Message.setOneofWrapperField(this, 3, proto.auctioncmd.AuctionRequest.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.auctioncmd.AuctionRequest} returns this
 */
proto.auctioncmd.AuctionRequest.prototype.clearFetchPlayerInfoByPlayerUuidRequest = function() {
  return this.setFetchPlayerInfoByPlayerUuidRequest(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.auctioncmd.AuctionRequest.prototype.hasFetchPlayerInfoByPlayerUuidRequest = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional UpdatePlayerInfoRequest update_player_info_request = 4;
 * @return {?proto.auctioncmd.UpdatePlayerInfoRequest}
 */
proto.auctioncmd.AuctionRequest.prototype.getUpdatePlayerInfoRequest = function() {
  return /** @type{?proto.auctioncmd.UpdatePlayerInfoRequest} */ (
    jspb.Message.getWrapperField(this, proto.auctioncmd.UpdatePlayerInfoRequest, 4));
};


/**
 * @param {?proto.auctioncmd.UpdatePlayerInfoRequest|undefined} value
 * @return {!proto.auctioncmd.AuctionRequest} returns this
*/
proto.auctioncmd.AuctionRequest.prototype.setUpdatePlayerInfoRequest = function(value) {
  return jspb.Message.setOneofWrapperField(this, 4, proto.auctioncmd.AuctionRequest.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.auctioncmd.AuctionRequest} returns this
 */
proto.auctioncmd.AuctionRequest.prototype.clearUpdatePlayerInfoRequest = function() {
  return this.setUpdatePlayerInfoRequest(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.auctioncmd.AuctionRequest.prototype.hasUpdatePlayerInfoRequest = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional CreateAuctionBoardRequest create_auction_board_request = 5;
 * @return {?proto.auctioncmd.CreateAuctionBoardRequest}
 */
proto.auctioncmd.AuctionRequest.prototype.getCreateAuctionBoardRequest = function() {
  return /** @type{?proto.auctioncmd.CreateAuctionBoardRequest} */ (
    jspb.Message.getWrapperField(this, proto.auctioncmd.CreateAuctionBoardRequest, 5));
};


/**
 * @param {?proto.auctioncmd.CreateAuctionBoardRequest|undefined} value
 * @return {!proto.auctioncmd.AuctionRequest} returns this
*/
proto.auctioncmd.AuctionRequest.prototype.setCreateAuctionBoardRequest = function(value) {
  return jspb.Message.setOneofWrapperField(this, 5, proto.auctioncmd.AuctionRequest.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.auctioncmd.AuctionRequest} returns this
 */
proto.auctioncmd.AuctionRequest.prototype.clearCreateAuctionBoardRequest = function() {
  return this.setCreateAuctionBoardRequest(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.auctioncmd.AuctionRequest.prototype.hasCreateAuctionBoardRequest = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional UpdateAuctionBoardRequest update_auction_board_request = 6;
 * @return {?proto.auctioncmd.UpdateAuctionBoardRequest}
 */
proto.auctioncmd.AuctionRequest.prototype.getUpdateAuctionBoardRequest = function() {
  return /** @type{?proto.auctioncmd.UpdateAuctionBoardRequest} */ (
    jspb.Message.getWrapperField(this, proto.auctioncmd.UpdateAuctionBoardRequest, 6));
};


/**
 * @param {?proto.auctioncmd.UpdateAuctionBoardRequest|undefined} value
 * @return {!proto.auctioncmd.AuctionRequest} returns this
*/
proto.auctioncmd.AuctionRequest.prototype.setUpdateAuctionBoardRequest = function(value) {
  return jspb.Message.setOneofWrapperField(this, 6, proto.auctioncmd.AuctionRequest.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.auctioncmd.AuctionRequest} returns this
 */
proto.auctioncmd.AuctionRequest.prototype.clearUpdateAuctionBoardRequest = function() {
  return this.setUpdateAuctionBoardRequest(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.auctioncmd.AuctionRequest.prototype.hasUpdateAuctionBoardRequest = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional DeleteAuctionBoardRequest delete_auction_board_request = 7;
 * @return {?proto.auctioncmd.DeleteAuctionBoardRequest}
 */
proto.auctioncmd.AuctionRequest.prototype.getDeleteAuctionBoardRequest = function() {
  return /** @type{?proto.auctioncmd.DeleteAuctionBoardRequest} */ (
    jspb.Message.getWrapperField(this, proto.auctioncmd.DeleteAuctionBoardRequest, 7));
};


/**
 * @param {?proto.auctioncmd.DeleteAuctionBoardRequest|undefined} value
 * @return {!proto.auctioncmd.AuctionRequest} returns this
*/
proto.auctioncmd.AuctionRequest.prototype.setDeleteAuctionBoardRequest = function(value) {
  return jspb.Message.setOneofWrapperField(this, 7, proto.auctioncmd.AuctionRequest.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.auctioncmd.AuctionRequest} returns this
 */
proto.auctioncmd.AuctionRequest.prototype.clearDeleteAuctionBoardRequest = function() {
  return this.setDeleteAuctionBoardRequest(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.auctioncmd.AuctionRequest.prototype.hasDeleteAuctionBoardRequest = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional FetchAuctionBoardRequest fetch_auction_board_request = 8;
 * @return {?proto.auctioncmd.FetchAuctionBoardRequest}
 */
proto.auctioncmd.AuctionRequest.prototype.getFetchAuctionBoardRequest = function() {
  return /** @type{?proto.auctioncmd.FetchAuctionBoardRequest} */ (
    jspb.Message.getWrapperField(this, proto.auctioncmd.FetchAuctionBoardRequest, 8));
};


/**
 * @param {?proto.auctioncmd.FetchAuctionBoardRequest|undefined} value
 * @return {!proto.auctioncmd.AuctionRequest} returns this
*/
proto.auctioncmd.AuctionRequest.prototype.setFetchAuctionBoardRequest = function(value) {
  return jspb.Message.setOneofWrapperField(this, 8, proto.auctioncmd.AuctionRequest.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.auctioncmd.AuctionRequest} returns this
 */
proto.auctioncmd.AuctionRequest.prototype.clearFetchAuctionBoardRequest = function() {
  return this.setFetchAuctionBoardRequest(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.auctioncmd.AuctionRequest.prototype.hasFetchAuctionBoardRequest = function() {
  return jspb.Message.getField(this, 8) != null;
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.auctioncmd.AuctionResponse.oneofGroups_ = [[3,4,5,6,7,8]];

/**
 * @enum {number}
 */
proto.auctioncmd.AuctionResponse.ResponseCase = {
  RESPONSE_NOT_SET: 0,
  FETCH_PLAYER_INFO_RESPONSE: 3,
  UPDATE_PLAYER_INFO_RESPONSE: 4,
  CREATE_AUCTION_BOARD_RESPONSE: 5,
  UPDATE_AUCTION_BOARD_RESPONSE: 6,
  DELETE_AUCTION_BOARD_RESPONSE: 7,
  FETCH_AUCTION_BOARD_RESPONSE: 8
};

/**
 * @return {proto.auctioncmd.AuctionResponse.ResponseCase}
 */
proto.auctioncmd.AuctionResponse.prototype.getResponseCase = function() {
  return /** @type {proto.auctioncmd.AuctionResponse.ResponseCase} */(jspb.Message.computeOneofCase(this, proto.auctioncmd.AuctionResponse.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.auctioncmd.AuctionResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.auctioncmd.AuctionResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.auctioncmd.AuctionResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.auctioncmd.AuctionResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    errormsg: jspb.Message.getFieldWithDefault(msg, 1, ""),
    responseType: jspb.Message.getFieldWithDefault(msg, 2, 0),
    fetchPlayerInfoResponse: (f = msg.getFetchPlayerInfoResponse()) && proto.auctioncmd.FetchPlayerInfoResponse.toObject(includeInstance, f),
    updatePlayerInfoResponse: (f = msg.getUpdatePlayerInfoResponse()) && proto.auctioncmd.UpdatePlayerInfoResponse.toObject(includeInstance, f),
    createAuctionBoardResponse: (f = msg.getCreateAuctionBoardResponse()) && proto.auctioncmd.CreateAuctionBoardResponse.toObject(includeInstance, f),
    updateAuctionBoardResponse: (f = msg.getUpdateAuctionBoardResponse()) && proto.auctioncmd.UpdateAuctionBoardResponse.toObject(includeInstance, f),
    deleteAuctionBoardResponse: (f = msg.getDeleteAuctionBoardResponse()) && proto.auctioncmd.DeleteAuctionBoardResponse.toObject(includeInstance, f),
    fetchAuctionBoardResponse: (f = msg.getFetchAuctionBoardResponse()) && proto.auctioncmd.FetchAuctionBoardResponse.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.auctioncmd.AuctionResponse}
 */
proto.auctioncmd.AuctionResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.auctioncmd.AuctionResponse;
  return proto.auctioncmd.AuctionResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.auctioncmd.AuctionResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.auctioncmd.AuctionResponse}
 */
proto.auctioncmd.AuctionResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setErrormsg(value);
      break;
    case 2:
      var value = /** @type {!proto.auctioncmd.AuctionResponse.ResponseType} */ (reader.readEnum());
      msg.setResponseType(value);
      break;
    case 3:
      var value = new proto.auctioncmd.FetchPlayerInfoResponse;
      reader.readMessage(value,proto.auctioncmd.FetchPlayerInfoResponse.deserializeBinaryFromReader);
      msg.setFetchPlayerInfoResponse(value);
      break;
    case 4:
      var value = new proto.auctioncmd.UpdatePlayerInfoResponse;
      reader.readMessage(value,proto.auctioncmd.UpdatePlayerInfoResponse.deserializeBinaryFromReader);
      msg.setUpdatePlayerInfoResponse(value);
      break;
    case 5:
      var value = new proto.auctioncmd.CreateAuctionBoardResponse;
      reader.readMessage(value,proto.auctioncmd.CreateAuctionBoardResponse.deserializeBinaryFromReader);
      msg.setCreateAuctionBoardResponse(value);
      break;
    case 6:
      var value = new proto.auctioncmd.UpdateAuctionBoardResponse;
      reader.readMessage(value,proto.auctioncmd.UpdateAuctionBoardResponse.deserializeBinaryFromReader);
      msg.setUpdateAuctionBoardResponse(value);
      break;
    case 7:
      var value = new proto.auctioncmd.DeleteAuctionBoardResponse;
      reader.readMessage(value,proto.auctioncmd.DeleteAuctionBoardResponse.deserializeBinaryFromReader);
      msg.setDeleteAuctionBoardResponse(value);
      break;
    case 8:
      var value = new proto.auctioncmd.FetchAuctionBoardResponse;
      reader.readMessage(value,proto.auctioncmd.FetchAuctionBoardResponse.deserializeBinaryFromReader);
      msg.setFetchAuctionBoardResponse(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.auctioncmd.AuctionResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.auctioncmd.AuctionResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.auctioncmd.AuctionResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.auctioncmd.AuctionResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getErrormsg();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getResponseType();
  if (f !== 0.0) {
    writer.writeEnum(
      2,
      f
    );
  }
  f = message.getFetchPlayerInfoResponse();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.auctioncmd.FetchPlayerInfoResponse.serializeBinaryToWriter
    );
  }
  f = message.getUpdatePlayerInfoResponse();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.auctioncmd.UpdatePlayerInfoResponse.serializeBinaryToWriter
    );
  }
  f = message.getCreateAuctionBoardResponse();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.auctioncmd.CreateAuctionBoardResponse.serializeBinaryToWriter
    );
  }
  f = message.getUpdateAuctionBoardResponse();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      proto.auctioncmd.UpdateAuctionBoardResponse.serializeBinaryToWriter
    );
  }
  f = message.getDeleteAuctionBoardResponse();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      proto.auctioncmd.DeleteAuctionBoardResponse.serializeBinaryToWriter
    );
  }
  f = message.getFetchAuctionBoardResponse();
  if (f != null) {
    writer.writeMessage(
      8,
      f,
      proto.auctioncmd.FetchAuctionBoardResponse.serializeBinaryToWriter
    );
  }
};


/**
 * @enum {number}
 */
proto.auctioncmd.AuctionResponse.ResponseType = {
  ERROR: 0,
  FETCH_PLAYER_INFO: 1,
  UPDATE_PLAYER_INFO: 2,
  CREATE_AUCTION_BOARD: 3,
  UPDATE_AUCTION_BOARD: 4,
  DELETE_AUCTION_BOARD: 5,
  FETCH_AUCTION_BOARD: 6
};

/**
 * optional string errormsg = 1;
 * @return {string}
 */
proto.auctioncmd.AuctionResponse.prototype.getErrormsg = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.auctioncmd.AuctionResponse} returns this
 */
proto.auctioncmd.AuctionResponse.prototype.setErrormsg = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional ResponseType response_type = 2;
 * @return {!proto.auctioncmd.AuctionResponse.ResponseType}
 */
proto.auctioncmd.AuctionResponse.prototype.getResponseType = function() {
  return /** @type {!proto.auctioncmd.AuctionResponse.ResponseType} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {!proto.auctioncmd.AuctionResponse.ResponseType} value
 * @return {!proto.auctioncmd.AuctionResponse} returns this
 */
proto.auctioncmd.AuctionResponse.prototype.setResponseType = function(value) {
  return jspb.Message.setProto3EnumField(this, 2, value);
};


/**
 * optional FetchPlayerInfoResponse fetch_player_info_response = 3;
 * @return {?proto.auctioncmd.FetchPlayerInfoResponse}
 */
proto.auctioncmd.AuctionResponse.prototype.getFetchPlayerInfoResponse = function() {
  return /** @type{?proto.auctioncmd.FetchPlayerInfoResponse} */ (
    jspb.Message.getWrapperField(this, proto.auctioncmd.FetchPlayerInfoResponse, 3));
};


/**
 * @param {?proto.auctioncmd.FetchPlayerInfoResponse|undefined} value
 * @return {!proto.auctioncmd.AuctionResponse} returns this
*/
proto.auctioncmd.AuctionResponse.prototype.setFetchPlayerInfoResponse = function(value) {
  return jspb.Message.setOneofWrapperField(this, 3, proto.auctioncmd.AuctionResponse.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.auctioncmd.AuctionResponse} returns this
 */
proto.auctioncmd.AuctionResponse.prototype.clearFetchPlayerInfoResponse = function() {
  return this.setFetchPlayerInfoResponse(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.auctioncmd.AuctionResponse.prototype.hasFetchPlayerInfoResponse = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional UpdatePlayerInfoResponse update_player_info_response = 4;
 * @return {?proto.auctioncmd.UpdatePlayerInfoResponse}
 */
proto.auctioncmd.AuctionResponse.prototype.getUpdatePlayerInfoResponse = function() {
  return /** @type{?proto.auctioncmd.UpdatePlayerInfoResponse} */ (
    jspb.Message.getWrapperField(this, proto.auctioncmd.UpdatePlayerInfoResponse, 4));
};


/**
 * @param {?proto.auctioncmd.UpdatePlayerInfoResponse|undefined} value
 * @return {!proto.auctioncmd.AuctionResponse} returns this
*/
proto.auctioncmd.AuctionResponse.prototype.setUpdatePlayerInfoResponse = function(value) {
  return jspb.Message.setOneofWrapperField(this, 4, proto.auctioncmd.AuctionResponse.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.auctioncmd.AuctionResponse} returns this
 */
proto.auctioncmd.AuctionResponse.prototype.clearUpdatePlayerInfoResponse = function() {
  return this.setUpdatePlayerInfoResponse(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.auctioncmd.AuctionResponse.prototype.hasUpdatePlayerInfoResponse = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional CreateAuctionBoardResponse create_auction_board_response = 5;
 * @return {?proto.auctioncmd.CreateAuctionBoardResponse}
 */
proto.auctioncmd.AuctionResponse.prototype.getCreateAuctionBoardResponse = function() {
  return /** @type{?proto.auctioncmd.CreateAuctionBoardResponse} */ (
    jspb.Message.getWrapperField(this, proto.auctioncmd.CreateAuctionBoardResponse, 5));
};


/**
 * @param {?proto.auctioncmd.CreateAuctionBoardResponse|undefined} value
 * @return {!proto.auctioncmd.AuctionResponse} returns this
*/
proto.auctioncmd.AuctionResponse.prototype.setCreateAuctionBoardResponse = function(value) {
  return jspb.Message.setOneofWrapperField(this, 5, proto.auctioncmd.AuctionResponse.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.auctioncmd.AuctionResponse} returns this
 */
proto.auctioncmd.AuctionResponse.prototype.clearCreateAuctionBoardResponse = function() {
  return this.setCreateAuctionBoardResponse(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.auctioncmd.AuctionResponse.prototype.hasCreateAuctionBoardResponse = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional UpdateAuctionBoardResponse update_auction_board_response = 6;
 * @return {?proto.auctioncmd.UpdateAuctionBoardResponse}
 */
proto.auctioncmd.AuctionResponse.prototype.getUpdateAuctionBoardResponse = function() {
  return /** @type{?proto.auctioncmd.UpdateAuctionBoardResponse} */ (
    jspb.Message.getWrapperField(this, proto.auctioncmd.UpdateAuctionBoardResponse, 6));
};


/**
 * @param {?proto.auctioncmd.UpdateAuctionBoardResponse|undefined} value
 * @return {!proto.auctioncmd.AuctionResponse} returns this
*/
proto.auctioncmd.AuctionResponse.prototype.setUpdateAuctionBoardResponse = function(value) {
  return jspb.Message.setOneofWrapperField(this, 6, proto.auctioncmd.AuctionResponse.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.auctioncmd.AuctionResponse} returns this
 */
proto.auctioncmd.AuctionResponse.prototype.clearUpdateAuctionBoardResponse = function() {
  return this.setUpdateAuctionBoardResponse(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.auctioncmd.AuctionResponse.prototype.hasUpdateAuctionBoardResponse = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional DeleteAuctionBoardResponse delete_auction_board_response = 7;
 * @return {?proto.auctioncmd.DeleteAuctionBoardResponse}
 */
proto.auctioncmd.AuctionResponse.prototype.getDeleteAuctionBoardResponse = function() {
  return /** @type{?proto.auctioncmd.DeleteAuctionBoardResponse} */ (
    jspb.Message.getWrapperField(this, proto.auctioncmd.DeleteAuctionBoardResponse, 7));
};


/**
 * @param {?proto.auctioncmd.DeleteAuctionBoardResponse|undefined} value
 * @return {!proto.auctioncmd.AuctionResponse} returns this
*/
proto.auctioncmd.AuctionResponse.prototype.setDeleteAuctionBoardResponse = function(value) {
  return jspb.Message.setOneofWrapperField(this, 7, proto.auctioncmd.AuctionResponse.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.auctioncmd.AuctionResponse} returns this
 */
proto.auctioncmd.AuctionResponse.prototype.clearDeleteAuctionBoardResponse = function() {
  return this.setDeleteAuctionBoardResponse(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.auctioncmd.AuctionResponse.prototype.hasDeleteAuctionBoardResponse = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional FetchAuctionBoardResponse fetch_auction_board_response = 8;
 * @return {?proto.auctioncmd.FetchAuctionBoardResponse}
 */
proto.auctioncmd.AuctionResponse.prototype.getFetchAuctionBoardResponse = function() {
  return /** @type{?proto.auctioncmd.FetchAuctionBoardResponse} */ (
    jspb.Message.getWrapperField(this, proto.auctioncmd.FetchAuctionBoardResponse, 8));
};


/**
 * @param {?proto.auctioncmd.FetchAuctionBoardResponse|undefined} value
 * @return {!proto.auctioncmd.AuctionResponse} returns this
*/
proto.auctioncmd.AuctionResponse.prototype.setFetchAuctionBoardResponse = function(value) {
  return jspb.Message.setOneofWrapperField(this, 8, proto.auctioncmd.AuctionResponse.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.auctioncmd.AuctionResponse} returns this
 */
proto.auctioncmd.AuctionResponse.prototype.clearFetchAuctionBoardResponse = function() {
  return this.setFetchAuctionBoardResponse(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.auctioncmd.AuctionResponse.prototype.hasFetchAuctionBoardResponse = function() {
  return jspb.Message.getField(this, 8) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.auctioncmd.FetchPlayerInfoByUserUUIDRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.auctioncmd.FetchPlayerInfoByUserUUIDRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.auctioncmd.FetchPlayerInfoByUserUUIDRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.auctioncmd.FetchPlayerInfoByUserUUIDRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    userUuid: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.auctioncmd.FetchPlayerInfoByUserUUIDRequest}
 */
proto.auctioncmd.FetchPlayerInfoByUserUUIDRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.auctioncmd.FetchPlayerInfoByUserUUIDRequest;
  return proto.auctioncmd.FetchPlayerInfoByUserUUIDRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.auctioncmd.FetchPlayerInfoByUserUUIDRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.auctioncmd.FetchPlayerInfoByUserUUIDRequest}
 */
proto.auctioncmd.FetchPlayerInfoByUserUUIDRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setUserUuid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.auctioncmd.FetchPlayerInfoByUserUUIDRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.auctioncmd.FetchPlayerInfoByUserUUIDRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.auctioncmd.FetchPlayerInfoByUserUUIDRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.auctioncmd.FetchPlayerInfoByUserUUIDRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUserUuid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string user_uuid = 1;
 * @return {string}
 */
proto.auctioncmd.FetchPlayerInfoByUserUUIDRequest.prototype.getUserUuid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.auctioncmd.FetchPlayerInfoByUserUUIDRequest} returns this
 */
proto.auctioncmd.FetchPlayerInfoByUserUUIDRequest.prototype.setUserUuid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.auctioncmd.FetchPlayerInfoByPlayerUUIDRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.auctioncmd.FetchPlayerInfoByPlayerUUIDRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.auctioncmd.FetchPlayerInfoByPlayerUUIDRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.auctioncmd.FetchPlayerInfoByPlayerUUIDRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    playerUuid: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.auctioncmd.FetchPlayerInfoByPlayerUUIDRequest}
 */
proto.auctioncmd.FetchPlayerInfoByPlayerUUIDRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.auctioncmd.FetchPlayerInfoByPlayerUUIDRequest;
  return proto.auctioncmd.FetchPlayerInfoByPlayerUUIDRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.auctioncmd.FetchPlayerInfoByPlayerUUIDRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.auctioncmd.FetchPlayerInfoByPlayerUUIDRequest}
 */
proto.auctioncmd.FetchPlayerInfoByPlayerUUIDRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setPlayerUuid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.auctioncmd.FetchPlayerInfoByPlayerUUIDRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.auctioncmd.FetchPlayerInfoByPlayerUUIDRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.auctioncmd.FetchPlayerInfoByPlayerUUIDRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.auctioncmd.FetchPlayerInfoByPlayerUUIDRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPlayerUuid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string player_uuid = 1;
 * @return {string}
 */
proto.auctioncmd.FetchPlayerInfoByPlayerUUIDRequest.prototype.getPlayerUuid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.auctioncmd.FetchPlayerInfoByPlayerUUIDRequest} returns this
 */
proto.auctioncmd.FetchPlayerInfoByPlayerUUIDRequest.prototype.setPlayerUuid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.auctioncmd.FetchPlayerInfoResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.auctioncmd.FetchPlayerInfoResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.auctioncmd.FetchPlayerInfoResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.auctioncmd.FetchPlayerInfoResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    playerUuid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    playerName: jspb.Message.getFieldWithDefault(msg, 2, ""),
    playerBio: jspb.Message.getFieldWithDefault(msg, 3, ""),
    playerProfileLink: jspb.Message.getFieldWithDefault(msg, 4, ""),
    playerType: jspb.Message.getFieldWithDefault(msg, 5, 0),
    playerPicture: msg.getPlayerPicture_asB64(),
    isPlayerActive: jspb.Message.getBooleanFieldWithDefault(msg, 7, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.auctioncmd.FetchPlayerInfoResponse}
 */
proto.auctioncmd.FetchPlayerInfoResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.auctioncmd.FetchPlayerInfoResponse;
  return proto.auctioncmd.FetchPlayerInfoResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.auctioncmd.FetchPlayerInfoResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.auctioncmd.FetchPlayerInfoResponse}
 */
proto.auctioncmd.FetchPlayerInfoResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setPlayerUuid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setPlayerName(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setPlayerBio(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setPlayerProfileLink(value);
      break;
    case 5:
      var value = /** @type {!proto.auctioncmd.PlayerType} */ (reader.readEnum());
      msg.setPlayerType(value);
      break;
    case 6:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setPlayerPicture(value);
      break;
    case 7:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsPlayerActive(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.auctioncmd.FetchPlayerInfoResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.auctioncmd.FetchPlayerInfoResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.auctioncmd.FetchPlayerInfoResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.auctioncmd.FetchPlayerInfoResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPlayerUuid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getPlayerName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getPlayerBio();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getPlayerProfileLink();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getPlayerType();
  if (f !== 0.0) {
    writer.writeEnum(
      5,
      f
    );
  }
  f = message.getPlayerPicture_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      6,
      f
    );
  }
  f = message.getIsPlayerActive();
  if (f) {
    writer.writeBool(
      7,
      f
    );
  }
};


/**
 * optional string player_uuid = 1;
 * @return {string}
 */
proto.auctioncmd.FetchPlayerInfoResponse.prototype.getPlayerUuid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.auctioncmd.FetchPlayerInfoResponse} returns this
 */
proto.auctioncmd.FetchPlayerInfoResponse.prototype.setPlayerUuid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string player_name = 2;
 * @return {string}
 */
proto.auctioncmd.FetchPlayerInfoResponse.prototype.getPlayerName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.auctioncmd.FetchPlayerInfoResponse} returns this
 */
proto.auctioncmd.FetchPlayerInfoResponse.prototype.setPlayerName = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string player_bio = 3;
 * @return {string}
 */
proto.auctioncmd.FetchPlayerInfoResponse.prototype.getPlayerBio = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.auctioncmd.FetchPlayerInfoResponse} returns this
 */
proto.auctioncmd.FetchPlayerInfoResponse.prototype.setPlayerBio = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string player_profile_link = 4;
 * @return {string}
 */
proto.auctioncmd.FetchPlayerInfoResponse.prototype.getPlayerProfileLink = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.auctioncmd.FetchPlayerInfoResponse} returns this
 */
proto.auctioncmd.FetchPlayerInfoResponse.prototype.setPlayerProfileLink = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional PlayerType player_type = 5;
 * @return {!proto.auctioncmd.PlayerType}
 */
proto.auctioncmd.FetchPlayerInfoResponse.prototype.getPlayerType = function() {
  return /** @type {!proto.auctioncmd.PlayerType} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {!proto.auctioncmd.PlayerType} value
 * @return {!proto.auctioncmd.FetchPlayerInfoResponse} returns this
 */
proto.auctioncmd.FetchPlayerInfoResponse.prototype.setPlayerType = function(value) {
  return jspb.Message.setProto3EnumField(this, 5, value);
};


/**
 * optional bytes player_picture = 6;
 * @return {!(string|Uint8Array)}
 */
proto.auctioncmd.FetchPlayerInfoResponse.prototype.getPlayerPicture = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * optional bytes player_picture = 6;
 * This is a type-conversion wrapper around `getPlayerPicture()`
 * @return {string}
 */
proto.auctioncmd.FetchPlayerInfoResponse.prototype.getPlayerPicture_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getPlayerPicture()));
};


/**
 * optional bytes player_picture = 6;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getPlayerPicture()`
 * @return {!Uint8Array}
 */
proto.auctioncmd.FetchPlayerInfoResponse.prototype.getPlayerPicture_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getPlayerPicture()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.auctioncmd.FetchPlayerInfoResponse} returns this
 */
proto.auctioncmd.FetchPlayerInfoResponse.prototype.setPlayerPicture = function(value) {
  return jspb.Message.setProto3BytesField(this, 6, value);
};


/**
 * optional bool is_player_active = 7;
 * @return {boolean}
 */
proto.auctioncmd.FetchPlayerInfoResponse.prototype.getIsPlayerActive = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 7, false));
};


/**
 * @param {boolean} value
 * @return {!proto.auctioncmd.FetchPlayerInfoResponse} returns this
 */
proto.auctioncmd.FetchPlayerInfoResponse.prototype.setIsPlayerActive = function(value) {
  return jspb.Message.setProto3BooleanField(this, 7, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.auctioncmd.UpdatePlayerInfoRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.auctioncmd.UpdatePlayerInfoRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.auctioncmd.UpdatePlayerInfoRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.auctioncmd.UpdatePlayerInfoRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    userUuid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    playerName: jspb.Message.getFieldWithDefault(msg, 2, ""),
    playerBio: jspb.Message.getFieldWithDefault(msg, 3, ""),
    playerProfileLink: jspb.Message.getFieldWithDefault(msg, 4, ""),
    playerType: jspb.Message.getFieldWithDefault(msg, 5, 0),
    playerPicture: msg.getPlayerPicture_asB64(),
    isPlayerActive: jspb.Message.getBooleanFieldWithDefault(msg, 7, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.auctioncmd.UpdatePlayerInfoRequest}
 */
proto.auctioncmd.UpdatePlayerInfoRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.auctioncmd.UpdatePlayerInfoRequest;
  return proto.auctioncmd.UpdatePlayerInfoRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.auctioncmd.UpdatePlayerInfoRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.auctioncmd.UpdatePlayerInfoRequest}
 */
proto.auctioncmd.UpdatePlayerInfoRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setUserUuid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setPlayerName(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setPlayerBio(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setPlayerProfileLink(value);
      break;
    case 5:
      var value = /** @type {!proto.auctioncmd.PlayerType} */ (reader.readEnum());
      msg.setPlayerType(value);
      break;
    case 6:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setPlayerPicture(value);
      break;
    case 7:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsPlayerActive(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.auctioncmd.UpdatePlayerInfoRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.auctioncmd.UpdatePlayerInfoRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.auctioncmd.UpdatePlayerInfoRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.auctioncmd.UpdatePlayerInfoRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUserUuid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getPlayerName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getPlayerBio();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getPlayerProfileLink();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getPlayerType();
  if (f !== 0.0) {
    writer.writeEnum(
      5,
      f
    );
  }
  f = message.getPlayerPicture_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      6,
      f
    );
  }
  f = message.getIsPlayerActive();
  if (f) {
    writer.writeBool(
      7,
      f
    );
  }
};


/**
 * optional string user_uuid = 1;
 * @return {string}
 */
proto.auctioncmd.UpdatePlayerInfoRequest.prototype.getUserUuid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.auctioncmd.UpdatePlayerInfoRequest} returns this
 */
proto.auctioncmd.UpdatePlayerInfoRequest.prototype.setUserUuid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string player_name = 2;
 * @return {string}
 */
proto.auctioncmd.UpdatePlayerInfoRequest.prototype.getPlayerName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.auctioncmd.UpdatePlayerInfoRequest} returns this
 */
proto.auctioncmd.UpdatePlayerInfoRequest.prototype.setPlayerName = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string player_bio = 3;
 * @return {string}
 */
proto.auctioncmd.UpdatePlayerInfoRequest.prototype.getPlayerBio = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.auctioncmd.UpdatePlayerInfoRequest} returns this
 */
proto.auctioncmd.UpdatePlayerInfoRequest.prototype.setPlayerBio = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string player_profile_link = 4;
 * @return {string}
 */
proto.auctioncmd.UpdatePlayerInfoRequest.prototype.getPlayerProfileLink = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.auctioncmd.UpdatePlayerInfoRequest} returns this
 */
proto.auctioncmd.UpdatePlayerInfoRequest.prototype.setPlayerProfileLink = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional PlayerType player_type = 5;
 * @return {!proto.auctioncmd.PlayerType}
 */
proto.auctioncmd.UpdatePlayerInfoRequest.prototype.getPlayerType = function() {
  return /** @type {!proto.auctioncmd.PlayerType} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {!proto.auctioncmd.PlayerType} value
 * @return {!proto.auctioncmd.UpdatePlayerInfoRequest} returns this
 */
proto.auctioncmd.UpdatePlayerInfoRequest.prototype.setPlayerType = function(value) {
  return jspb.Message.setProto3EnumField(this, 5, value);
};


/**
 * optional bytes player_picture = 6;
 * @return {!(string|Uint8Array)}
 */
proto.auctioncmd.UpdatePlayerInfoRequest.prototype.getPlayerPicture = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * optional bytes player_picture = 6;
 * This is a type-conversion wrapper around `getPlayerPicture()`
 * @return {string}
 */
proto.auctioncmd.UpdatePlayerInfoRequest.prototype.getPlayerPicture_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getPlayerPicture()));
};


/**
 * optional bytes player_picture = 6;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getPlayerPicture()`
 * @return {!Uint8Array}
 */
proto.auctioncmd.UpdatePlayerInfoRequest.prototype.getPlayerPicture_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getPlayerPicture()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.auctioncmd.UpdatePlayerInfoRequest} returns this
 */
proto.auctioncmd.UpdatePlayerInfoRequest.prototype.setPlayerPicture = function(value) {
  return jspb.Message.setProto3BytesField(this, 6, value);
};


/**
 * optional bool is_player_active = 7;
 * @return {boolean}
 */
proto.auctioncmd.UpdatePlayerInfoRequest.prototype.getIsPlayerActive = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 7, false));
};


/**
 * @param {boolean} value
 * @return {!proto.auctioncmd.UpdatePlayerInfoRequest} returns this
 */
proto.auctioncmd.UpdatePlayerInfoRequest.prototype.setIsPlayerActive = function(value) {
  return jspb.Message.setProto3BooleanField(this, 7, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.auctioncmd.UpdatePlayerInfoResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.auctioncmd.UpdatePlayerInfoResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.auctioncmd.UpdatePlayerInfoResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.auctioncmd.UpdatePlayerInfoResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    updateSuccess: jspb.Message.getBooleanFieldWithDefault(msg, 1, false),
    playerUuid: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.auctioncmd.UpdatePlayerInfoResponse}
 */
proto.auctioncmd.UpdatePlayerInfoResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.auctioncmd.UpdatePlayerInfoResponse;
  return proto.auctioncmd.UpdatePlayerInfoResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.auctioncmd.UpdatePlayerInfoResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.auctioncmd.UpdatePlayerInfoResponse}
 */
proto.auctioncmd.UpdatePlayerInfoResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setUpdateSuccess(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setPlayerUuid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.auctioncmd.UpdatePlayerInfoResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.auctioncmd.UpdatePlayerInfoResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.auctioncmd.UpdatePlayerInfoResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.auctioncmd.UpdatePlayerInfoResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUpdateSuccess();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
  f = message.getPlayerUuid();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional bool update_success = 1;
 * @return {boolean}
 */
proto.auctioncmd.UpdatePlayerInfoResponse.prototype.getUpdateSuccess = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};


/**
 * @param {boolean} value
 * @return {!proto.auctioncmd.UpdatePlayerInfoResponse} returns this
 */
proto.auctioncmd.UpdatePlayerInfoResponse.prototype.setUpdateSuccess = function(value) {
  return jspb.Message.setProto3BooleanField(this, 1, value);
};


/**
 * optional string player_uuid = 2;
 * @return {string}
 */
proto.auctioncmd.UpdatePlayerInfoResponse.prototype.getPlayerUuid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.auctioncmd.UpdatePlayerInfoResponse} returns this
 */
proto.auctioncmd.UpdatePlayerInfoResponse.prototype.setPlayerUuid = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.auctioncmd.PlayerCategory.prototype.toObject = function(opt_includeInstance) {
  return proto.auctioncmd.PlayerCategory.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.auctioncmd.PlayerCategory} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.auctioncmd.PlayerCategory.toObject = function(includeInstance, msg) {
  var f, obj = {
    categoryName: jspb.Message.getFieldWithDefault(msg, 1, ""),
    playerBasePrice: jspb.Message.getFieldWithDefault(msg, 2, 0),
    categoryUuid: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.auctioncmd.PlayerCategory}
 */
proto.auctioncmd.PlayerCategory.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.auctioncmd.PlayerCategory;
  return proto.auctioncmd.PlayerCategory.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.auctioncmd.PlayerCategory} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.auctioncmd.PlayerCategory}
 */
proto.auctioncmd.PlayerCategory.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setCategoryName(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setPlayerBasePrice(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setCategoryUuid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.auctioncmd.PlayerCategory.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.auctioncmd.PlayerCategory.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.auctioncmd.PlayerCategory} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.auctioncmd.PlayerCategory.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCategoryName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getPlayerBasePrice();
  if (f !== 0) {
    writer.writeUint64(
      2,
      f
    );
  }
  f = message.getCategoryUuid();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional string category_name = 1;
 * @return {string}
 */
proto.auctioncmd.PlayerCategory.prototype.getCategoryName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.auctioncmd.PlayerCategory} returns this
 */
proto.auctioncmd.PlayerCategory.prototype.setCategoryName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional uint64 player_base_price = 2;
 * @return {number}
 */
proto.auctioncmd.PlayerCategory.prototype.getPlayerBasePrice = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.auctioncmd.PlayerCategory} returns this
 */
proto.auctioncmd.PlayerCategory.prototype.setPlayerBasePrice = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional string category_uuid = 3;
 * @return {string}
 */
proto.auctioncmd.PlayerCategory.prototype.getCategoryUuid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.auctioncmd.PlayerCategory} returns this
 */
proto.auctioncmd.PlayerCategory.prototype.setCategoryUuid = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.auctioncmd.AutionParticipant.prototype.toObject = function(opt_includeInstance) {
  return proto.auctioncmd.AutionParticipant.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.auctioncmd.AutionParticipant} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.auctioncmd.AutionParticipant.toObject = function(includeInstance, msg) {
  var f, obj = {
    playerId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    participantRole: jspb.Message.getFieldWithDefault(msg, 2, 0),
    playerCategory: (f = msg.getPlayerCategory()) && proto.auctioncmd.PlayerCategory.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.auctioncmd.AutionParticipant}
 */
proto.auctioncmd.AutionParticipant.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.auctioncmd.AutionParticipant;
  return proto.auctioncmd.AutionParticipant.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.auctioncmd.AutionParticipant} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.auctioncmd.AutionParticipant}
 */
proto.auctioncmd.AutionParticipant.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setPlayerId(value);
      break;
    case 2:
      var value = /** @type {!proto.auctioncmd.ParticipantRole} */ (reader.readEnum());
      msg.setParticipantRole(value);
      break;
    case 3:
      var value = new proto.auctioncmd.PlayerCategory;
      reader.readMessage(value,proto.auctioncmd.PlayerCategory.deserializeBinaryFromReader);
      msg.setPlayerCategory(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.auctioncmd.AutionParticipant.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.auctioncmd.AutionParticipant.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.auctioncmd.AutionParticipant} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.auctioncmd.AutionParticipant.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPlayerId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getParticipantRole();
  if (f !== 0.0) {
    writer.writeEnum(
      2,
      f
    );
  }
  f = message.getPlayerCategory();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.auctioncmd.PlayerCategory.serializeBinaryToWriter
    );
  }
};


/**
 * optional string player_id = 1;
 * @return {string}
 */
proto.auctioncmd.AutionParticipant.prototype.getPlayerId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.auctioncmd.AutionParticipant} returns this
 */
proto.auctioncmd.AutionParticipant.prototype.setPlayerId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional ParticipantRole participant_role = 2;
 * @return {!proto.auctioncmd.ParticipantRole}
 */
proto.auctioncmd.AutionParticipant.prototype.getParticipantRole = function() {
  return /** @type {!proto.auctioncmd.ParticipantRole} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {!proto.auctioncmd.ParticipantRole} value
 * @return {!proto.auctioncmd.AutionParticipant} returns this
 */
proto.auctioncmd.AutionParticipant.prototype.setParticipantRole = function(value) {
  return jspb.Message.setProto3EnumField(this, 2, value);
};


/**
 * optional PlayerCategory player_category = 3;
 * @return {?proto.auctioncmd.PlayerCategory}
 */
proto.auctioncmd.AutionParticipant.prototype.getPlayerCategory = function() {
  return /** @type{?proto.auctioncmd.PlayerCategory} */ (
    jspb.Message.getWrapperField(this, proto.auctioncmd.PlayerCategory, 3));
};


/**
 * @param {?proto.auctioncmd.PlayerCategory|undefined} value
 * @return {!proto.auctioncmd.AutionParticipant} returns this
*/
proto.auctioncmd.AutionParticipant.prototype.setPlayerCategory = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.auctioncmd.AutionParticipant} returns this
 */
proto.auctioncmd.AutionParticipant.prototype.clearPlayerCategory = function() {
  return this.setPlayerCategory(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.auctioncmd.AutionParticipant.prototype.hasPlayerCategory = function() {
  return jspb.Message.getField(this, 3) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.auctioncmd.CreateAuctionBoardRequest.repeatedFields_ = [6];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.auctioncmd.CreateAuctionBoardRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.auctioncmd.CreateAuctionBoardRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.auctioncmd.CreateAuctionBoardRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.auctioncmd.CreateAuctionBoardRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    auctioneerPlayerUuid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    auctionBoardName: jspb.Message.getFieldWithDefault(msg, 2, ""),
    scheduleTime: (f = msg.getScheduleTime()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    purseMoney: jspb.Message.getFieldWithDefault(msg, 4, 0),
    purseCcy: jspb.Message.getFieldWithDefault(msg, 5, ""),
    playerCategoryListList: jspb.Message.toObjectList(msg.getPlayerCategoryListList(),
    proto.auctioncmd.PlayerCategory.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.auctioncmd.CreateAuctionBoardRequest}
 */
proto.auctioncmd.CreateAuctionBoardRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.auctioncmd.CreateAuctionBoardRequest;
  return proto.auctioncmd.CreateAuctionBoardRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.auctioncmd.CreateAuctionBoardRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.auctioncmd.CreateAuctionBoardRequest}
 */
proto.auctioncmd.CreateAuctionBoardRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setAuctioneerPlayerUuid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setAuctionBoardName(value);
      break;
    case 3:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setScheduleTime(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setPurseMoney(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setPurseCcy(value);
      break;
    case 6:
      var value = new proto.auctioncmd.PlayerCategory;
      reader.readMessage(value,proto.auctioncmd.PlayerCategory.deserializeBinaryFromReader);
      msg.addPlayerCategoryList(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.auctioncmd.CreateAuctionBoardRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.auctioncmd.CreateAuctionBoardRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.auctioncmd.CreateAuctionBoardRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.auctioncmd.CreateAuctionBoardRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAuctioneerPlayerUuid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getAuctionBoardName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getScheduleTime();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getPurseMoney();
  if (f !== 0) {
    writer.writeUint64(
      4,
      f
    );
  }
  f = message.getPurseCcy();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getPlayerCategoryListList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      6,
      f,
      proto.auctioncmd.PlayerCategory.serializeBinaryToWriter
    );
  }
};


/**
 * optional string auctioneer_player_uuid = 1;
 * @return {string}
 */
proto.auctioncmd.CreateAuctionBoardRequest.prototype.getAuctioneerPlayerUuid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.auctioncmd.CreateAuctionBoardRequest} returns this
 */
proto.auctioncmd.CreateAuctionBoardRequest.prototype.setAuctioneerPlayerUuid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string auction_board_name = 2;
 * @return {string}
 */
proto.auctioncmd.CreateAuctionBoardRequest.prototype.getAuctionBoardName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.auctioncmd.CreateAuctionBoardRequest} returns this
 */
proto.auctioncmd.CreateAuctionBoardRequest.prototype.setAuctionBoardName = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional google.protobuf.Timestamp schedule_time = 3;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.auctioncmd.CreateAuctionBoardRequest.prototype.getScheduleTime = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 3));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.auctioncmd.CreateAuctionBoardRequest} returns this
*/
proto.auctioncmd.CreateAuctionBoardRequest.prototype.setScheduleTime = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.auctioncmd.CreateAuctionBoardRequest} returns this
 */
proto.auctioncmd.CreateAuctionBoardRequest.prototype.clearScheduleTime = function() {
  return this.setScheduleTime(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.auctioncmd.CreateAuctionBoardRequest.prototype.hasScheduleTime = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional uint64 purse_money = 4;
 * @return {number}
 */
proto.auctioncmd.CreateAuctionBoardRequest.prototype.getPurseMoney = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.auctioncmd.CreateAuctionBoardRequest} returns this
 */
proto.auctioncmd.CreateAuctionBoardRequest.prototype.setPurseMoney = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional string purse_ccy = 5;
 * @return {string}
 */
proto.auctioncmd.CreateAuctionBoardRequest.prototype.getPurseCcy = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.auctioncmd.CreateAuctionBoardRequest} returns this
 */
proto.auctioncmd.CreateAuctionBoardRequest.prototype.setPurseCcy = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * repeated PlayerCategory player_category_list = 6;
 * @return {!Array<!proto.auctioncmd.PlayerCategory>}
 */
proto.auctioncmd.CreateAuctionBoardRequest.prototype.getPlayerCategoryListList = function() {
  return /** @type{!Array<!proto.auctioncmd.PlayerCategory>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.auctioncmd.PlayerCategory, 6));
};


/**
 * @param {!Array<!proto.auctioncmd.PlayerCategory>} value
 * @return {!proto.auctioncmd.CreateAuctionBoardRequest} returns this
*/
proto.auctioncmd.CreateAuctionBoardRequest.prototype.setPlayerCategoryListList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 6, value);
};


/**
 * @param {!proto.auctioncmd.PlayerCategory=} opt_value
 * @param {number=} opt_index
 * @return {!proto.auctioncmd.PlayerCategory}
 */
proto.auctioncmd.CreateAuctionBoardRequest.prototype.addPlayerCategoryList = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 6, opt_value, proto.auctioncmd.PlayerCategory, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.auctioncmd.CreateAuctionBoardRequest} returns this
 */
proto.auctioncmd.CreateAuctionBoardRequest.prototype.clearPlayerCategoryListList = function() {
  return this.setPlayerCategoryListList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.auctioncmd.CreateAuctionBoardResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.auctioncmd.CreateAuctionBoardResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.auctioncmd.CreateAuctionBoardResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.auctioncmd.CreateAuctionBoardResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    auctionBoardUuid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    auctionCode: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.auctioncmd.CreateAuctionBoardResponse}
 */
proto.auctioncmd.CreateAuctionBoardResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.auctioncmd.CreateAuctionBoardResponse;
  return proto.auctioncmd.CreateAuctionBoardResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.auctioncmd.CreateAuctionBoardResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.auctioncmd.CreateAuctionBoardResponse}
 */
proto.auctioncmd.CreateAuctionBoardResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setAuctionBoardUuid(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setAuctionCode(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.auctioncmd.CreateAuctionBoardResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.auctioncmd.CreateAuctionBoardResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.auctioncmd.CreateAuctionBoardResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.auctioncmd.CreateAuctionBoardResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAuctionBoardUuid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getAuctionCode();
  if (f !== 0) {
    writer.writeUint32(
      2,
      f
    );
  }
};


/**
 * optional string auction_board_uuid = 1;
 * @return {string}
 */
proto.auctioncmd.CreateAuctionBoardResponse.prototype.getAuctionBoardUuid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.auctioncmd.CreateAuctionBoardResponse} returns this
 */
proto.auctioncmd.CreateAuctionBoardResponse.prototype.setAuctionBoardUuid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional uint32 auction_code = 2;
 * @return {number}
 */
proto.auctioncmd.CreateAuctionBoardResponse.prototype.getAuctionCode = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.auctioncmd.CreateAuctionBoardResponse} returns this
 */
proto.auctioncmd.CreateAuctionBoardResponse.prototype.setAuctionCode = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.auctioncmd.FetchAuctionBoardRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.auctioncmd.FetchAuctionBoardRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.auctioncmd.FetchAuctionBoardRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.auctioncmd.FetchAuctionBoardRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    auctionBoardUuid: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.auctioncmd.FetchAuctionBoardRequest}
 */
proto.auctioncmd.FetchAuctionBoardRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.auctioncmd.FetchAuctionBoardRequest;
  return proto.auctioncmd.FetchAuctionBoardRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.auctioncmd.FetchAuctionBoardRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.auctioncmd.FetchAuctionBoardRequest}
 */
proto.auctioncmd.FetchAuctionBoardRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setAuctionBoardUuid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.auctioncmd.FetchAuctionBoardRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.auctioncmd.FetchAuctionBoardRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.auctioncmd.FetchAuctionBoardRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.auctioncmd.FetchAuctionBoardRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAuctionBoardUuid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string auction_board_uuid = 1;
 * @return {string}
 */
proto.auctioncmd.FetchAuctionBoardRequest.prototype.getAuctionBoardUuid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.auctioncmd.FetchAuctionBoardRequest} returns this
 */
proto.auctioncmd.FetchAuctionBoardRequest.prototype.setAuctionBoardUuid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.auctioncmd.FetchAuctionBoardResponse.repeatedFields_ = [6];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.auctioncmd.FetchAuctionBoardResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.auctioncmd.FetchAuctionBoardResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.auctioncmd.FetchAuctionBoardResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.auctioncmd.FetchAuctionBoardResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    auctioneerPlayerUuid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    auctionBoardName: jspb.Message.getFieldWithDefault(msg, 2, ""),
    scheduleTime: (f = msg.getScheduleTime()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    purseMoney: jspb.Message.getFieldWithDefault(msg, 4, 0),
    purseCcy: jspb.Message.getFieldWithDefault(msg, 5, ""),
    playerCategoryListList: jspb.Message.toObjectList(msg.getPlayerCategoryListList(),
    proto.auctioncmd.PlayerCategory.toObject, includeInstance),
    auctionCode: jspb.Message.getFieldWithDefault(msg, 7, 0),
    isActive: jspb.Message.getBooleanFieldWithDefault(msg, 8, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.auctioncmd.FetchAuctionBoardResponse}
 */
proto.auctioncmd.FetchAuctionBoardResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.auctioncmd.FetchAuctionBoardResponse;
  return proto.auctioncmd.FetchAuctionBoardResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.auctioncmd.FetchAuctionBoardResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.auctioncmd.FetchAuctionBoardResponse}
 */
proto.auctioncmd.FetchAuctionBoardResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setAuctioneerPlayerUuid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setAuctionBoardName(value);
      break;
    case 3:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setScheduleTime(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setPurseMoney(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setPurseCcy(value);
      break;
    case 6:
      var value = new proto.auctioncmd.PlayerCategory;
      reader.readMessage(value,proto.auctioncmd.PlayerCategory.deserializeBinaryFromReader);
      msg.addPlayerCategoryList(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setAuctionCode(value);
      break;
    case 8:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsActive(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.auctioncmd.FetchAuctionBoardResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.auctioncmd.FetchAuctionBoardResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.auctioncmd.FetchAuctionBoardResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.auctioncmd.FetchAuctionBoardResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAuctioneerPlayerUuid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getAuctionBoardName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getScheduleTime();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getPurseMoney();
  if (f !== 0) {
    writer.writeUint64(
      4,
      f
    );
  }
  f = message.getPurseCcy();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getPlayerCategoryListList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      6,
      f,
      proto.auctioncmd.PlayerCategory.serializeBinaryToWriter
    );
  }
  f = message.getAuctionCode();
  if (f !== 0) {
    writer.writeUint32(
      7,
      f
    );
  }
  f = message.getIsActive();
  if (f) {
    writer.writeBool(
      8,
      f
    );
  }
};


/**
 * optional string auctioneer_player_uuid = 1;
 * @return {string}
 */
proto.auctioncmd.FetchAuctionBoardResponse.prototype.getAuctioneerPlayerUuid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.auctioncmd.FetchAuctionBoardResponse} returns this
 */
proto.auctioncmd.FetchAuctionBoardResponse.prototype.setAuctioneerPlayerUuid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string auction_board_name = 2;
 * @return {string}
 */
proto.auctioncmd.FetchAuctionBoardResponse.prototype.getAuctionBoardName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.auctioncmd.FetchAuctionBoardResponse} returns this
 */
proto.auctioncmd.FetchAuctionBoardResponse.prototype.setAuctionBoardName = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional google.protobuf.Timestamp schedule_time = 3;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.auctioncmd.FetchAuctionBoardResponse.prototype.getScheduleTime = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 3));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.auctioncmd.FetchAuctionBoardResponse} returns this
*/
proto.auctioncmd.FetchAuctionBoardResponse.prototype.setScheduleTime = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.auctioncmd.FetchAuctionBoardResponse} returns this
 */
proto.auctioncmd.FetchAuctionBoardResponse.prototype.clearScheduleTime = function() {
  return this.setScheduleTime(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.auctioncmd.FetchAuctionBoardResponse.prototype.hasScheduleTime = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional uint64 purse_money = 4;
 * @return {number}
 */
proto.auctioncmd.FetchAuctionBoardResponse.prototype.getPurseMoney = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.auctioncmd.FetchAuctionBoardResponse} returns this
 */
proto.auctioncmd.FetchAuctionBoardResponse.prototype.setPurseMoney = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional string purse_ccy = 5;
 * @return {string}
 */
proto.auctioncmd.FetchAuctionBoardResponse.prototype.getPurseCcy = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.auctioncmd.FetchAuctionBoardResponse} returns this
 */
proto.auctioncmd.FetchAuctionBoardResponse.prototype.setPurseCcy = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * repeated PlayerCategory player_category_list = 6;
 * @return {!Array<!proto.auctioncmd.PlayerCategory>}
 */
proto.auctioncmd.FetchAuctionBoardResponse.prototype.getPlayerCategoryListList = function() {
  return /** @type{!Array<!proto.auctioncmd.PlayerCategory>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.auctioncmd.PlayerCategory, 6));
};


/**
 * @param {!Array<!proto.auctioncmd.PlayerCategory>} value
 * @return {!proto.auctioncmd.FetchAuctionBoardResponse} returns this
*/
proto.auctioncmd.FetchAuctionBoardResponse.prototype.setPlayerCategoryListList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 6, value);
};


/**
 * @param {!proto.auctioncmd.PlayerCategory=} opt_value
 * @param {number=} opt_index
 * @return {!proto.auctioncmd.PlayerCategory}
 */
proto.auctioncmd.FetchAuctionBoardResponse.prototype.addPlayerCategoryList = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 6, opt_value, proto.auctioncmd.PlayerCategory, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.auctioncmd.FetchAuctionBoardResponse} returns this
 */
proto.auctioncmd.FetchAuctionBoardResponse.prototype.clearPlayerCategoryListList = function() {
  return this.setPlayerCategoryListList([]);
};


/**
 * optional uint32 auction_code = 7;
 * @return {number}
 */
proto.auctioncmd.FetchAuctionBoardResponse.prototype.getAuctionCode = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {number} value
 * @return {!proto.auctioncmd.FetchAuctionBoardResponse} returns this
 */
proto.auctioncmd.FetchAuctionBoardResponse.prototype.setAuctionCode = function(value) {
  return jspb.Message.setProto3IntField(this, 7, value);
};


/**
 * optional bool is_active = 8;
 * @return {boolean}
 */
proto.auctioncmd.FetchAuctionBoardResponse.prototype.getIsActive = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 8, false));
};


/**
 * @param {boolean} value
 * @return {!proto.auctioncmd.FetchAuctionBoardResponse} returns this
 */
proto.auctioncmd.FetchAuctionBoardResponse.prototype.setIsActive = function(value) {
  return jspb.Message.setProto3BooleanField(this, 8, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.auctioncmd.DeleteAuctionBoardRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.auctioncmd.DeleteAuctionBoardRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.auctioncmd.DeleteAuctionBoardRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.auctioncmd.DeleteAuctionBoardRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    auctionBoardUuid: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.auctioncmd.DeleteAuctionBoardRequest}
 */
proto.auctioncmd.DeleteAuctionBoardRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.auctioncmd.DeleteAuctionBoardRequest;
  return proto.auctioncmd.DeleteAuctionBoardRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.auctioncmd.DeleteAuctionBoardRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.auctioncmd.DeleteAuctionBoardRequest}
 */
proto.auctioncmd.DeleteAuctionBoardRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setAuctionBoardUuid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.auctioncmd.DeleteAuctionBoardRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.auctioncmd.DeleteAuctionBoardRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.auctioncmd.DeleteAuctionBoardRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.auctioncmd.DeleteAuctionBoardRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAuctionBoardUuid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string auction_board_uuid = 1;
 * @return {string}
 */
proto.auctioncmd.DeleteAuctionBoardRequest.prototype.getAuctionBoardUuid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.auctioncmd.DeleteAuctionBoardRequest} returns this
 */
proto.auctioncmd.DeleteAuctionBoardRequest.prototype.setAuctionBoardUuid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.auctioncmd.DeleteAuctionBoardResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.auctioncmd.DeleteAuctionBoardResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.auctioncmd.DeleteAuctionBoardResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.auctioncmd.DeleteAuctionBoardResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    success: jspb.Message.getBooleanFieldWithDefault(msg, 1, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.auctioncmd.DeleteAuctionBoardResponse}
 */
proto.auctioncmd.DeleteAuctionBoardResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.auctioncmd.DeleteAuctionBoardResponse;
  return proto.auctioncmd.DeleteAuctionBoardResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.auctioncmd.DeleteAuctionBoardResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.auctioncmd.DeleteAuctionBoardResponse}
 */
proto.auctioncmd.DeleteAuctionBoardResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setSuccess(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.auctioncmd.DeleteAuctionBoardResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.auctioncmd.DeleteAuctionBoardResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.auctioncmd.DeleteAuctionBoardResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.auctioncmd.DeleteAuctionBoardResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSuccess();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
};


/**
 * optional bool success = 1;
 * @return {boolean}
 */
proto.auctioncmd.DeleteAuctionBoardResponse.prototype.getSuccess = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};


/**
 * @param {boolean} value
 * @return {!proto.auctioncmd.DeleteAuctionBoardResponse} returns this
 */
proto.auctioncmd.DeleteAuctionBoardResponse.prototype.setSuccess = function(value) {
  return jspb.Message.setProto3BooleanField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.auctioncmd.UpdateAuctionBoardRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.auctioncmd.UpdateAuctionBoardRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.auctioncmd.UpdateAuctionBoardRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.auctioncmd.UpdateAuctionBoardRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    auctionBoardUuid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    auctionBoardName: jspb.Message.getFieldWithDefault(msg, 2, ""),
    scheduleTime: (f = msg.getScheduleTime()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    purseMoney: jspb.Message.getFieldWithDefault(msg, 4, 0),
    purseCcy: jspb.Message.getFieldWithDefault(msg, 5, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.auctioncmd.UpdateAuctionBoardRequest}
 */
proto.auctioncmd.UpdateAuctionBoardRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.auctioncmd.UpdateAuctionBoardRequest;
  return proto.auctioncmd.UpdateAuctionBoardRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.auctioncmd.UpdateAuctionBoardRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.auctioncmd.UpdateAuctionBoardRequest}
 */
proto.auctioncmd.UpdateAuctionBoardRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setAuctionBoardUuid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setAuctionBoardName(value);
      break;
    case 3:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setScheduleTime(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setPurseMoney(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setPurseCcy(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.auctioncmd.UpdateAuctionBoardRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.auctioncmd.UpdateAuctionBoardRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.auctioncmd.UpdateAuctionBoardRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.auctioncmd.UpdateAuctionBoardRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAuctionBoardUuid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getAuctionBoardName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getScheduleTime();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getPurseMoney();
  if (f !== 0) {
    writer.writeUint64(
      4,
      f
    );
  }
  f = message.getPurseCcy();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
};


/**
 * optional string auction_board_uuid = 1;
 * @return {string}
 */
proto.auctioncmd.UpdateAuctionBoardRequest.prototype.getAuctionBoardUuid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.auctioncmd.UpdateAuctionBoardRequest} returns this
 */
proto.auctioncmd.UpdateAuctionBoardRequest.prototype.setAuctionBoardUuid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string auction_board_name = 2;
 * @return {string}
 */
proto.auctioncmd.UpdateAuctionBoardRequest.prototype.getAuctionBoardName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.auctioncmd.UpdateAuctionBoardRequest} returns this
 */
proto.auctioncmd.UpdateAuctionBoardRequest.prototype.setAuctionBoardName = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional google.protobuf.Timestamp schedule_time = 3;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.auctioncmd.UpdateAuctionBoardRequest.prototype.getScheduleTime = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 3));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.auctioncmd.UpdateAuctionBoardRequest} returns this
*/
proto.auctioncmd.UpdateAuctionBoardRequest.prototype.setScheduleTime = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.auctioncmd.UpdateAuctionBoardRequest} returns this
 */
proto.auctioncmd.UpdateAuctionBoardRequest.prototype.clearScheduleTime = function() {
  return this.setScheduleTime(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.auctioncmd.UpdateAuctionBoardRequest.prototype.hasScheduleTime = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional uint64 purse_money = 4;
 * @return {number}
 */
proto.auctioncmd.UpdateAuctionBoardRequest.prototype.getPurseMoney = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.auctioncmd.UpdateAuctionBoardRequest} returns this
 */
proto.auctioncmd.UpdateAuctionBoardRequest.prototype.setPurseMoney = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional string purse_ccy = 5;
 * @return {string}
 */
proto.auctioncmd.UpdateAuctionBoardRequest.prototype.getPurseCcy = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.auctioncmd.UpdateAuctionBoardRequest} returns this
 */
proto.auctioncmd.UpdateAuctionBoardRequest.prototype.setPurseCcy = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.auctioncmd.UpdateAuctionBoardResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.auctioncmd.UpdateAuctionBoardResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.auctioncmd.UpdateAuctionBoardResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.auctioncmd.UpdateAuctionBoardResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    success: jspb.Message.getBooleanFieldWithDefault(msg, 1, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.auctioncmd.UpdateAuctionBoardResponse}
 */
proto.auctioncmd.UpdateAuctionBoardResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.auctioncmd.UpdateAuctionBoardResponse;
  return proto.auctioncmd.UpdateAuctionBoardResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.auctioncmd.UpdateAuctionBoardResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.auctioncmd.UpdateAuctionBoardResponse}
 */
proto.auctioncmd.UpdateAuctionBoardResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setSuccess(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.auctioncmd.UpdateAuctionBoardResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.auctioncmd.UpdateAuctionBoardResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.auctioncmd.UpdateAuctionBoardResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.auctioncmd.UpdateAuctionBoardResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSuccess();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
};


/**
 * optional bool success = 1;
 * @return {boolean}
 */
proto.auctioncmd.UpdateAuctionBoardResponse.prototype.getSuccess = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};


/**
 * @param {boolean} value
 * @return {!proto.auctioncmd.UpdateAuctionBoardResponse} returns this
 */
proto.auctioncmd.UpdateAuctionBoardResponse.prototype.setSuccess = function(value) {
  return jspb.Message.setProto3BooleanField(this, 1, value);
};


/**
 * @enum {number}
 */
proto.auctioncmd.PlayerType = {
  NONE: 0,
  RIGHT_HANDED_BAT: 1,
  LEFT_HANDED_BAT: 2,
  RIGHT_ARM_BOWL: 3,
  LEFT_ARM_BOWL: 4,
  BATTING_ALL_ROUNDER: 5,
  BOWLING_ALL_ROUNDER: 6
};

/**
 * @enum {number}
 */
proto.auctioncmd.ParticipantRole = {
  CAPTAIN: 0,
  PLAYER_UNDER_HAMMER: 1,
  VIEWER: 2
};

goog.object.extend(exports, proto.auctioncmd);
